---
layout: default
title: Rails Girls アプリを MOGOK で動かしてみよう
permalink: mogok
---

# Rails Girls アプリを MOGOK で動かしてみよう

*Created by Hiroshi ABE, [@hirolovesbeer](https://twitter.com/hirolovesbeer)*

## MOGOK のアカウントを作成しよう
[サインアップ画面](https://auth.mogok.jp/signup)からアカウントを作成しましょう。
数分待つと、確認＆登録用URL付きメールが届きますのでサインアップをしましょう。


## 1. MOGOKコマンドラインツールをインストールしましょう
MOGOKを利用するには「MOGOKコマンドラインツール」をインストールする必要があります。
MOGOKコマンドラインツールは `rubygems.org` にて公開されていますので、
以下のコマンドでインストールできます。

    > gem install mogok

これで、MOGOKコマンドを実行できるようになります。


## 2. MOGOKでアプリケーションを動作させるための準備
MOGOKはデータベースにMySQLを利用しています。みなさんのローカル環境ではSQLiteを利用して開発をしている方が多いでしょう。SQLiteで開発したアプリケーションを問題なくMOGOKで動作させるおまじないを書きます。


### Gemfileの書き換え
Gemfileに以下のGemが記述されていない場合には追記します。(既に記述がある場合にはskipしてかまいません。)

    gem 'therubyracer'
    gem 'sqlite3', group: :development
    gem 'mysql2', '~> 0.3.20',  group: :production

Gemfile.lock をアップデートするため、一度 `bundle install` を実行します。このとき、 `--without production` オプションをつけると、 `mysql2` gem を手元PCにインストールしなくて済みます。

    bundle install --without production

### assets:precompileの有効化
「config/environments/production.rb」ファイルに対して、以下の変更を行ないます。 本設定変更により、MOGOK上のproduction環境で、スタイルシート等が読み込まれるようにします。

##### 書き換え前

    config.assets.compile = false

##### 書き換え後

    config.assets.compile = true


## 3. 作成したRailsアプリケーションをローカルのgitリポジトリに登録しよう
[アプリケーションを作成したディレクトリで以下のgitコマンドを実行します](http://mogok.jp/documents/create_git_repository/)

    > git init
    > git add .
    > git commit -m "my first commit"

正常にgitのローカルリポジトリが作成できているかはを確認するには「.git」ディレクトリが作成されていることを確認し、以下のコマンドを実行して下さい。

    > git status

以下のような表示がでれば、正常です。

    # On branch master
    nothing to commit (working directory clean)


## 4. 作成したRailsアプリケーションをMOGOKに登録しよう

### アプリケーション名の登録

`> mogok create your-app-name` を実行

- 登録したユーザIDとパスワードが求められます
- 誰かが同じアプリケーション名を既に使っている場合にはエラーが表示されるので、名前を変えましょう。
- アプリケーション名は「英小文字、数字、ハイフンからなる1文字以上60文字以下の文字列」で定義できます。

`> git remote -v` で確認

    mogok   http://git.mogok.jp/mogok-sample-1234.git (fetch)
    mogok   http://git.mogok.jp/mogok-sample-1234.git (push)

- 上記のように表示されると成功です！！


### ローカルリポジトリのデータをMOGOKのgitサーバへと送りましょう

以下のコマンドを実行します。

    > git push mogok master

- 登録したユーザIDとパスワードが求められます

[参考：MOGOKアプリケーションの作成(MOGOKオンラインマニュアル)](http://mogok.jp/documents/create_mogok_app)

## 5. MOGOKへとアプリケーションのデプロイをしましょう

### MOGOK上で必要な設定をします。

以下のコマンドを実行します。

    > rake secret
    > mogok env set SECRET_KEY_BASE （rake secretで表示されたランダムな文字列）

Windowsでコマンドプロンプトを使っている場合はタイトルバーを右クリックして、`編集`を選択すると`範囲指定`が選べます。それを同様に`編集`から`貼り付け`でランダムな文字列をペーストしてください。

[環境変数管理メニュー](http://mogok.jp/documents/webui_env_var)からも同じ設定が行えます。

### サーバ上でbundle installを実行する為に以下のMOGOKコマンドを実行します。

    > mogok build

- これでサーバ上でbundle installが実行されます

![mogok build](http://dl.dropbox.com/u/908641/starting-mogok/fig_deployment_1.png)

- 「Package creating... Done!」が表示されれば、bundle installが成功になります。

[参考：デプロイの実行(MOGOKオンラインマニュアル)](http://mogok.jp/documents/deployment)

### rake db:migrateの実行

    > mogok rake db:migrate

- これでMOGOK上で、db:migrateが実行されます

![mogok build](http://dl.dropbox.com/u/908641/starting-mogok/fig_deployment_2.png)

## 6. MOGOKでアプリケーションを公開しましょう

    > mogok start

- これであなたのアプリケーションは、世界中に公開されました！！


## 公開アプリケーションの確認

以下のコマンドを実行します。

    > mogok info

![mogok info](https://dl.dropbox.com/u/10442024/mogolog/20121220/20121220-9.png)

リポジトリ情報とあなたのアプリケーションのURLが表示されます。
ブラウザでアクセスしてみましょう！！
