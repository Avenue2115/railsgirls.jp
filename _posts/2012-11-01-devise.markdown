---
layout: default
title: Devise で認証機能を追加
permalink: devise
---

# Devise で認証機能を追加

*Created by Piotr Steininger, [@polishprince](https://twitter.com/polishprince)*

*Updated by Ernesto Jimenez, [@ernesto_jimenez](https://twitter.com/ernesto_jimenez)*

** このガイドは、すでに [ RailsGirls アプリ・チュートリアル ](/app) でアプリを作った方を対象にしています。 **



## Step 0: devise gem を追加

アプリの `Gemfile` を開いて、次の行を追加します。

{% highlight ruby %}
gem 'devise'
{% endhighlight %}

そして、ターミナルもしくはコマンドプロンプト(Windows用)を開いてアプリのディレクトリへ移動し、次のコマンドを実行しましょう。

{% highlight sh %}
bundle install
{% endhighlight %}

gem のインストールができました。Rails のサーバーを再起動するのを忘れずに!


## Step 1: アプリに devise をセットアップ

次は、先ほどのディレクトリでこのコマンドを実行しましょう。

{% highlight sh %}
rails g devise:install
{% endhighlight %}

## Step 2: Devise の環境設定

environments ファイルにデフォルトの url オプションを定義します。
`config/environments/development.rb` を開いて次の行を追加しましょう。

{% highlight ruby %}
   config.action_mailer.default_url_options = { :host => 'localhost:3000' }
{% endhighlight %}

`end` と書かれているところの前に追加してください。

さらに `app/views/layouts/application.html.erb` を開いて、

{% highlight erb %}
<% if notice %>
  <p class="alert alert-notice"><%= notice %></p>
<% end %>
<% if alert %>
  <p class="alert alert-error"><%= alert %></p>
<% end %>
{% endhighlight %}

これらを、次の行の上に追加します。

{% highlight ruby %}
   <%= yield %>
{% endhighlight %}

最後に、 [ heroku にアプリをアップ ](/heroku) する予定があれば、 `config/application.rb` に次の行も追加してください。

{% highlight ruby %}
  config.assets.initialize_on_precompile = false
{% endhighlight %}

これは下から３行目（2つ目の `end` の上）に追加してください。

## Step 3: User model をセットアップ

User model を作るために bundled generator script を使います。

{% highlight sh %}
   rails g devise user
   rake db:migrate
{% endhighlight %}

**Coach:** Explain what user model has been generated. What are the
fields?

Then add this line to your `app/models/user.rb`:

{% highlight ruby %}
attr_accessible :email, :password, :password_confirmation
{% endhighlight %}

## Step 4: ユーザーを作成

Now that you have set everyting up you can create your first user. Devise creates all the code and routes required to create accounts, log in, log out, etc.

Make sure your rails server is running, open [http://localhost:3000/users/sign_up](http://localhost:3000/users/sign_up) and create your user account.

## Step 5: サインアップとログインリンクの追加

あと、やらなければいけないことは、ユーザーがログインできる適切なリンク、または案内をナビゲーションバー右上のコーナーに追加することです。
そのために、 `app/views/layouts/application.html.erb` を開いて、

{% highlight erb %}
<p class="navbar-text pull-right">
<% if user_signed_in? %>
  Logged in as <strong><%= current_user.email %></strong>.
  <%= link_to 'Edit profile', edit_user_registration_path, :class => 'navbar-link' %> |
  <%= link_to "Logout", destroy_user_session_path, method: :delete, :class => 'navbar-link'  %>
<% else %>
  <%= link_to "Sign up", new_user_registration_path, :class => 'navbar-link'  %> |
  <%= link_to "Login", new_user_session_path, :class => 'navbar-link'  %>
<% end %>
{% endhighlight %}

これらを、次の行の上に追加します。

{% highlight erb %}
<ul class="nav">
  <li class="active"><a href="/ideas">Ideas</a></li>
</ul>
{% endhighlight %}

ブラウザを開いてログインやログアウトを試してみてください。

**Coach:** Talk about the `user_signed_in?` and `current_user` helpers. Why are they useful?

## 次は？

* User model のその他の項目も追加しましょう。
* users と ideas 間のリレーションを追加しましょう。
* それぞれ自分の ideas だけ編集できるように users に制限をかけましょう。
* ロールやパーミッションを使うように拡張しましょう。（ CanCan のような人気の認証 gem も使ってみてください。）


